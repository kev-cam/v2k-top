# Copyright (c) 1998-2007 Kevin Cameron
# Distributed under the GNU Lesser General Public License
# RCS ID: $Id: all.gmk,v 1.88 2010/05/13 18:40:26 dkc Exp $

default: all

SDF_PCXX  =sdf_pool.pcc
SDF_CXX   =sdf.cpp
PC_CXX    =pc.cpp pc2.cpp pc3.cpp pc_write.cpp pc_expr.cpp

PCXX_FILES=po_pool.pcc xp_pool.pcc mod_pool.pcc arith.pcc udp_pool.pcc\
	   cg_pool.pcc $(SDF_PCXX)

INC_DIR   =$(PROJECT_DIR)/src/include

TOK_FILES:=$(shell egrep -v '\#|/' $(INC_DIR)/fxd_pool.h | cut -d, -f4 | sed -e s/null// -e 's/.$$//' )
TXX_FILES =$(foreach f,$(TOK_FILES),$(f)-t.cpp)
CXX_FILES =$(TXX_FILES) verilog2.cpp verilog3.cpp arith.cpp sim_kern2.cpp\
	   dump.cpp cdump.cpp elaborate.cpp veri_args.cpp mod_pool.cpp\
	   parser.cpp udp_pool.cpp expr.cpp shell.cpp cg.cpp sim_kern.cpp\
	   $(SDF_CXX) $(PC_CXX)

Y_FILES   =veri_pars-y.c sdf_pars-y.c cpp_pars-y.c
C_FILES   =language.c genparse.c reconstruct.c verilog.c tokfunc.c\
           $(Y_FILES) $(SWIG_C)

CLEANABLE=verilog.tdf integer.tdf *-*.h

OTHER_SHARED=common

ifdef DOCUMENTING
INC_FILES:=$(shell ls *.inc)
endif

include pools.gmk

pl-prfx.gmk: all.gmk $(INC_DIR)/fxd_pool.h
	for p in $(TOK_FILES) ; do\
	  echo $$p"_prfx="`grep $$p\) $(INC_DIR)/fxd_pool.h | sed -e 's/FXD_POOL.//' -e 's/,.*//'` >>$@$(TMP_FILE) ;\
	done
	mv $@$(TMP_FILE) $@

include pl-prfx.gmk


$(INC_DIR)/lang-list.h: all.gmk $(INC_DIR)/fxd_pool.h
	echo "/* Automatic*/" > $(INC_DIR)/lang-list.h$(TMP_FILE) 
	for f in $(TOK_FILES) ; do\
	  echo "#include \"$$f-t.h\"" >>$(INC_DIR)/lang-list.h$(TMP_FILE);\
	done
	mv $(INC_DIR)/lang-list.h$(TMP_FILE) $(INC_DIR)/lang-list.h

genparse.c: $(INC_DIR)/lang-list.h\
	    $(foreach t,$(TOK_FILES),$(INC_DIR)/$(t)-t.h)

COMMON_LST =whitespace,operators,punctuation,quotes,comments,timing
VERILOG_LST=$(COMMON_LST),vpp,verilog,tasks,acctfvpi,math,global,signal
OVERLAP_LST=tasks,sysfunc
SDF_LST    =$(COMMON_LST),sdf
CPP_LST    =whitespace,punctuation,quotes,comments,vpp,prp,cpp,prc,cppops,prcops,gnu,labels,builtin,char

cppops.tdf: cppops.cpp all.gmk $(INC_DIR)/cppops.inc
	gcc -E cppops.cpp -I$(INC_DIR) |\
	    sed "s/^$$/extern/" | egrep -v "extern|# " > cppops.tdf$(TMP_FILE)
	mv -f $@$(TMP_FILE) $@
	chmod -w $@

prcops.tdf: prcops.cpp all.gmk $(INC_DIR)/prcops.inc
	gcc -E prcops.cpp -I$(INC_DIR) |\
	    sed "s/^$$/extern/" | egrep -v "extern|# " > prcops.tdf$(TMP_FILE)
	mv -f $@$(TMP_FILE) $@
	chmod -w $@

verilog.tdf: tasks.tdf sysfunc.tdf verilog_key.tdf verilog_punc.tdf
	cat verilog_punc.tdf verilog_key.tdf tasks.tdf sysfunc.tdf >$@$(TMP_FILE)
	mv -f $@$(TMP_FILE) $@
	chmod -w $@

ifndef CONFIG_DIR
CONFIG_DIR=$(HOME)/$(PROJECT)-$(VERSION)/config
endif

include $(CONFIG_DIR)/common.gmk

ifeq (1-1,$(HAVE_SWIG)-$(SHARED_LIBS))
SWIG_C=liblanguages_wrap.c
endif

LANGUAGES_LIB_OBJ=$(O_FILES)

$(INC_DIR)/veri_pool-rop.cpp $(INC_DIR)/veri_pool-dsc.h: veri_pool.pls
	$(MK_SCRIPT) -fast veri_pool-dsc.h

$(INC_DIR)/sdf_pool-rop.cpp $(INC_DIR)/sdf_pool-dsc.h: sdf_pool.pls
	$(MK_SCRIPT) -fast sdf_pool-dsc.h

ports-%.inc::
	ln -s ports.inc $@

eval_data-%.inc::
	ln -s eval_data.inc $@

ifndef IGNORE_DEPS
include icc-deps.gmk
include $(OBJ_DIR)/deps.gmk
include $(INC_DIR)/$(OBJ_DIR)/deps.gmk
endif

ifndef SETUP
include $(OBJ_DIR)/autolib.gmk
endif

%vprim.inc:
	$(MK_SCRIPT) -cd $(INC_DIR) vprim.inc

TemplateSdfPool-sdf.fld: TemplateSdfPool.c
	gcc -E TemplateSdfPool.c -I$(INC_DIR) > TemplateSdfPool-sdf.fld$(TMP_FILE)
	mv -f $@$(TMP_FILE) $@
	chmod -w $@

integer.tdf: all.gmk
	rm -f $@
	(n=0; while [ $$n != 1025 ] ;\
	      do echo $$n ; n=$$(($$n + 1)); done) >> $@-$$$$;\
	mv $@-$$$$ $@$(TMP_FILE)
	mv -f $@$(TMP_FILE) $@
	chmod -w $@

export OBJ_EXE_DIR OBJ_PRFX OBJ_LIB_DIR CMODEX OBJ_PRFX

GENPARSE=./gnprs.csh
GENPARSE_EXE=$(OBJ_EXE_DIR)/genparse$(CMODEX)$(OBJ_PRFX)

# kludge for static build
$(OBJ_EXE_DIR)/genparse-a: $(OBJ_EXE_DIR)/genparse
	rm -f $@ ; ln -s genparse $@

GENPARSE_LIB_O= $(LANGUAGE_O)\
		$(foreach f,$(TOK_FILES),$(OBJ_DIR)/$(f)-t$(CMODE)$(OBJ))

gnprs_obj: $(GENPARSE_LIB_O)

GP_O=$(GENPARSE_O) $(GENPARSE_LIB_O)

$(GENPARSE_EXE): $(GP_O)
	$(LINK_CXX) $(GP_O) $(USE_LIBS) $(USE_COMMON) $(SYS_LIBS) -o $@

GENPARSE_O_X=$(foreach c,genparse language,$(OBJ_DIR)/$(c)$(CMODE)$(OBJ))

gnprs_exe:
	$(MK_SCRIPT) $(GENPARSE_EXE) GNPRS_ONLY=1 IGNORE_DEPS=1\
			 CXX_FILES= PCXX_FILES=\
                         GENPARSE_O="$(GENPARSE_O_X)";

%.inc: %.tdf
	grep -v '#' $< | awk '{printf("$(subst .inc,,$@)(%s)\n",$$1)}' |\
				    tr '$$[:lower:]' '_[:upper:]' > $@$(TMP_FILE);\
		mv $@$(TMP_FILE) $@

COMMA=,
genparse-verilog.c: verilog.tdf\
		      $(foreach t,$(subst $(COMMA), ,$(VERILOG_LST)),$(INC_DIR)/$(t)-t.h)
	$(DEBUGGER) $(GENPARSE) $@ $(GNPRS_ARG) -lang=$(VERILOG_LST)

genparse-sdf.c: $(GENPARSE)\
		$(foreach t,$(subst $(COMMA), ,$(SDF_LST)),$(INC_DIR)/$(t)-t.h)
	$(DEBUGGER) $(GENPARSE) $@ $(GNPRS_ARG) -lang=$(SDF_LST)

genparse-cpp.c: $(GENPARSE)\
		$(foreach t,$(subst $(COMMA), ,$(CPP_LST)),$(INC_DIR)/$(t)-t.h)
	$(DEBUGGER) $(GENPARSE) $@ $(GNPRS_ARG) -lang=$(CPP_LST)

tok_files:
	@echo $(TOK_FILES)

new_dump:
	sed s/vdump:/ndump:/ < dump.cpp > dump2.cpp

all: gnprs_exe lib_languages
	@echo "Built Common Library - $(LANGUAGES_LIB)"
